{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/HMS05/Projects/ToDo/frontend/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { taskToggleStatus } from \"../helpers/task\";\n\nconst Task = ({\n  task,\n  handleChange\n}) => {\n  _s();\n\n  const [completed, setCompleted] = useState(task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: completed === 1 ? \"row xs-between completed-task\" : \"row xs-between task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xs-4 col-sm-2 col-md-1 check\",\n      onClick: async () => {\n        let response = await taskToggleStatus(task);\n\n        if (response) {\n          handleChange();\n          setCompleted(completed ? 0 : 1);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"icon\",\n        icon: completed === 1 ? faCheckSquare : faSquare,\n        size: \"2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xs-8 col-sm-10 col-md-11 details\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [task.id, \". \", task.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"7XsUvji2i7+BIckDIqPP1jvQ5mA=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/HMS05/Projects/ToDo/frontend/src/components/Task.js"],"names":["React","useState","FontAwesomeIcon","faSquare","faCheckSquare","taskToggleStatus","Task","task","handleChange","completed","setCompleted","response","id","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,qCAAxC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACM,IAAI,CAACE,SAAN,CAA1C;AAEA,sBACE;AACE,IAAA,SAAS,EACPA,SAAS,KAAK,CAAd,GACI,+BADJ,GAEI,qBAJR;AAAA,4BAOE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,OAAO,EAAE,YAAY;AACnB,YAAIE,QAAQ,GAAG,MAAMN,gBAAgB,CAACE,IAAD,CAArC;;AACA,YAAII,QAAJ,EAAc;AACZH,UAAAA,YAAY;AACZE,UAAAA,YAAY,CAACD,SAAS,GAAG,CAAH,GAAO,CAAjB,CAAZ;AACD;AACF,OARH;AAAA,6BAUE,QAAC,eAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAEA,SAAS,KAAK,CAAd,GAAkBL,aAAlB,GAAkCD,QAF1C;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YAPF,eAuBE;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA,6BACE;AAAA,mBACGI,IAAI,CAACK,EADR,QACcL,IAAI,CAACM,WADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlCD;;GAAMP,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquare, faCheckSquare } from \"@fortawesome/free-regular-svg-icons\";\nimport { taskToggleStatus } from \"../helpers/task\";\n\nconst Task = ({ task, handleChange }) => {\n  const [completed, setCompleted] = useState(task.completed);\n\n  return (\n    <div\n      className={\n        completed === 1\n          ? \"row xs-between completed-task\"\n          : \"row xs-between task\"\n      }\n    >\n      <div\n        className=\"col-xs-4 col-sm-2 col-md-1 check\"\n        onClick={async () => {\n          let response = await taskToggleStatus(task);\n          if (response) {\n            handleChange();\n            setCompleted(completed ? 0 : 1);\n          }\n        }}\n      >\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={completed === 1 ? faCheckSquare : faSquare}\n          size=\"2x\"\n        />\n      </div>\n      <div className=\"col-xs-8 col-sm-10 col-md-11 details\">\n        <h3>\n          {task.id}. {task.description}\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}